import mysql.connector
from mysql.connector import Error
import os

# Função para conectar ao banco de dados MySQL.
def conectar_banco():
    try:
        conn = mysql.connector.connect(
            user='root',
            password='lui1234',
            host='localhost'
            #database='db_loja_3'
        )
        return conn
    except Error as e:
        print(f"Erro ao conectar ao MySQL: {e}")
        return None

# Função para criar o banco de dados.
def criar_database_sql(conn):
    try:
        cursor = conn.cursor()
        cursor.execute("CREATE DATABASE IF NOT EXISTS db_loja_3")
        cursor.execute("USE db_loja_3")
        print("Banco de dados configurado com sucesso!")
    except Error as e:
        print(f"Erro ao criar o banco de dados: {e}")

# Função para criar a tabela no banco de dados.
def criar_tabela_sql(cursor):
    try:
        sql_create = '''CREATE TABLE IF NOT EXISTS produto(
            id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
            nome_produto VARCHAR(25) UNIQUE NOT NULL,
            preco DECIMAL(9, 2) NOT NULL,
            data_validade DATE NULL)'''
        cursor.execute(sql_create)
        print("Tabela criada com sucesso!")
    except Error as e:
        print(f"Erro ao criar a tabela: {e}")

# Função para inserir um produto na tabela.
def inserir_na_tabela(cursor):
    try:
        sql_insert = '''INSERT INTO produto(nome_produto, preco, data_validade)
                        VALUES (%s, %s, %s)'''
        nome = input("Digite o nome do produto: ")
        preco = float(input("Digite o preço do produto: "))
        validade = input("Digite a data de validade (YYYY-MM-DD): ")
        cursor.execute(sql_insert, (nome, preco, validade))
        print("Produto inserido com sucesso!")
    except Error as e:
        print(f"Erro ao inserir o produto: {e}")

# Função para listar os produtos.
def listar_tabela(cursor):
    try:
        sql = "SELECT * FROM produto"

        cursor.execute(sql)

        resultado = cursor.fetchall()

        if not resultado:
            print("tabela vazia.")

        else:
            for func in resultado:
                print(func)
                print("-" * 35)

            for func in resultado:
                print("ID:", func[0])
                print("Nome:", func[1])
                print("preço:", func[2])
                print("data de validade:", func[3])
                print("-"*35)
    except Error as e:
        print(f"Erro ao consultar produtos: {e}")

# Função para atualizar o preço de um produto.
def atualizar_tabela(cursor):
    try:
        sql_update = "UPDATE produto SET preco = %s WHERE nome_produto = %s"
        nome = input("Digite o nome do produto: ")
        preco = float(input("Digite o novo preço: "))
        cursor.execute(sql_update, (preco, nome))
        print("Produto atualizado com sucesso!")
    except Error as e:
        print(f"Erro ao atualizar o produto: {e}")

# Função para deletar um produto.
def deletar_produto(cursor):
    try:
        sql_delete = "DELETE FROM produto WHERE nome_produto = %s"
        nome = input("Digite o nome do produto a ser deletado: ")
        cursor.execute(sql_delete, (nome,))
        print("Produto deletado com sucesso!")
    except Error as e:
        print(f"Erro ao deletar o produto: {e}")

# Função para deletar a tabela.
def deletar_tabela(cursor):
    try:
        cursor.execute("DROP TABLE IF EXISTS produto")
        print("Tabela deletada com sucesso!")
    except Error as e:
        print(f"Erro ao deletar a tabela: {e}")

# Função principal que orquestra a execução do programa.
def main():
    conn = conectar_banco()
    if conn is None:
        print("Não foi possível conectar ao banco de dados.")
        return

    criar_database_sql(conn)
    cursor = conn.cursor()

    # Dicionário para mapear opções do menu às funções correspondentes.
    opcoes = {
        "c": lambda: criar_tabela_sql(cursor),
        "i": lambda: inserir_na_tabela(cursor),
        "r": lambda: listar_tabela(cursor),
        "u": lambda: atualizar_tabela(cursor),
        "d": lambda: deletar_tabela(cursor),
        "dp": lambda: deletar_produto(cursor),
    }

    while True:
        print("\nMenu loja:")
        print("c - Criar tabela")
        print("i - Inserir produto na tabela")
        print("r - Listar tabela")
        print("u - Atualizar produto na tabela")
        print("d - Deletar tabela")
        print("dp - Deletar produto")
        print("s - Sair")

        escolha = input("Escolha uma opção: ").lower()
        if escolha == "s":
            os.system("cls")
            break
        elif escolha in opcoes:
            opcoes[escolha]()
            conn.commit()  # Confirma as alterações no banco de dados.
        else:
            print("Opção inválida!")

    cursor.close()
    conn.close()
    print("\nPrograma encerrado.")

# Ponto de entrada do programa.
if __name__ == "__main__":
    main()
